trigger:
- main

pool:
  name: Azure Pipelines

variables:
  dockerRegistryServiceConnection: $(dockerRegistryServiceConnectionGuid)  # Replace with your actual service connection ID
  backendImageRepository: 'backend-3Tier'
  frontendImageRepository: 'frontend-3Tier'
  containerRegistry: '3tier.azurecr.io'
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build and Test
    jobs:
      - job: BuildAndTest
        displayName: Build, Test, and Analyze
        steps:
          - checkout: self

          # Backend tasks
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Node.js for Backend'

          - script: |
              cd backend
              npm install
              npm test
            displayName: 'Install dependencies and run tests for Backend'

          - task: SonarQubeAnalyze@6
            inputs:
              jdkversion: 'JAVA_HOME_17_X64'
            displayName: 'Run SonarQube analysis for Backend'

          - task: Docker@2
            displayName: 'Build and push Backend Docker image'
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(containerRegistry)/$(backendImageRepository)'
              command: 'buildAndPush'
              Dockerfile: 'backend/Dockerfile'
              tags: |
                $(tag)

          # Frontend tasks
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Node.js for Frontend'

          - script: |
              cd frontend
              npm install
              npm run test
            displayName: 'Install dependencies and run tests for Frontend'

          - task: SonarQubeAnalyze@6
            inputs:
              jdkversion: 'JAVA_HOME_17_X64'
            displayName: 'Run SonarQube analysis for Frontend'

          - task: Docker@2
            displayName: 'Build and push Frontend Docker image'
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(containerRegistry)/$(frontendImageRepository)'
              command: 'buildAndPush'
              Dockerfile: 'frontend/Dockerfile'
              tags: |
                $(tag)
