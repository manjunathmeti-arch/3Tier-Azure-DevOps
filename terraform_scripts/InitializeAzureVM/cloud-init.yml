#cloud-config
package_update: true
package_upgrade: true
packages:
  - libcurl4
  - libunwind8
  - gettext
  - unzip
  - wget
  - jq
  - docker.io
  - openjdk-17-jdk
  - postgresql
  - postgresql-contrib

users:
  - name: azureuser
    gecos: "Azure User"
    sudo: 'ALL=(ALL) NOPASSWD:ALL'
    groups: sudo, docker
    shell: /bin/bash
    lock_passwd: false
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5mPFpXBTQfuWCD98KipmibxrIM+TtdeDOZ/DYLlAQo25W73xCQrkKBq42y0f97pvs4z4GJb9p/jT8w7vYQ9jpEB1Z2fWWVeVLshNSvmaDlvC8LX3RSdSzYZyMz5wJYWV6xv8jLj8OBZoopEYcEMtWlvbgcdNSyIMwcAQoLn8FGx5O7nuqpl23poE/5hSN2/P+2C9UGtEETmuzzAnw+dnnnFJaOlGN6n+uAGMlgOtCDyfSe5rw9/WgUCXLG8SSQhdvM8oIlGdwDgSrxlNZinRqTxqv7nLMOzbZHcHGV3RpGO+bBT9/0km/473F5+MLeq/6kfsHe7V4Px9DkFrS6Gu9 shehroz@ShozeeGame

chpasswd:
  list: |
    azureuser:1  # Replace 1 with your desired password
  expire: false

write_files:
  - path: /etc/sysctl.d/99-sysctl.conf
    content: |
      vm.max_map_count=262144
      fs.file-max=131072

  #Creating Docker compose for SonarQube
  - path: /etc/docker-compose/sonarqube/docker-compose.yml
    content: |
      version: '3.8'
      services:
        sonarqube_db:
          image: postgres
          container_name: sonarqube_db
          restart: unless-stopped
          environment:
            POSTGRES_DB: sonar
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar_password
          volumes:
            - /home/ubuntu/postgres/postgresql:/var/lib/postgresql
            - /home/ubuntu/postgres/data:/var/lib/postgresql/data
          networks:
            - sonar-net

        sonarqube:
          image: sonarqube:community
          container_name: sonarqube
          restart: unless-stopped
          depends_on:
            - sonarqube_db
          ports:
            - "9000:9000"
          environment:
            SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar_password
            SONAR_CE_JAVAOPTS: -Xmx1192m
            SONAR_WEB_JAVAOPTS: -Xmx1192m
          volumes:
            - /home/ubuntu/sonar-data/data:/opt/sonarqube/data
            - /home/ubuntu/sonar-data/extensions:/opt/sonarqube/extensions
            - /home/ubuntu/sonar-data/logs:/opt/sonarqube/logs
          networks:
            - sonar-net

      networks:
        sonar-net:
          driver: bridge


runcmd:
  - echo "Creating agent directory..."
  - sudo mkdir -p /home/azureuser/myagent

  - echo "Changing directory to agent directory..."
  - cd /home/azureuser/myagent
  
  - echo "Downloading Azure DevOps agent..."
  - sudo wget https://vstsagentpackage.azureedge.net/agent/2.193.1/vsts-agent-linux-x64-2.193.1.tar.gz
  
  - echo "Extracting Azure DevOps agent..."
  - sudo tar zxvf vsts-agent-linux-x64-2.193.1.tar.gz
  
  - echo "Changing ownership of agent directory..."
  - sudo chown -R azureuser:azureuser /home/azureuser/myagent
  
  # ENTER THE PAT YOU CREATED IN AZURE DEVOPS HERE. THAT PAT CAN ALSO BE USED IN SONARQUBE. 
  - echo "Configuring Azure DevOps agent..."
  - sudo -u azureuser ./config.sh --unattended --url https://dev.azure.com/ShehrozDevOps --auth pat --token 3qngl54biudm2puap3wsztk2vis6pn4ajdtkfd7s3oh7zy7dmxia --pool Default --agent myDevOpsAgent --acceptTeeEula
  
  - echo "Installing Azure DevOps agent service..."
  - sudo ./svc.sh install
  
  - echo "Starting Azure DevOps agent service..."
  - sudo ./svc.sh start
  
  - echo "Checking Azure DevOps agent service status..."
  - sudo ./svc.sh status
  
  - echo "Creating Docker compose directories..."
  - sudo mkdir -p /home/ubuntu/postgres/postgresql
  - sudo mkdir -p /home/ubuntu/postgres/data
  - sudo mkdir -p /home/ubuntu/sonar-data/data
  - sudo mkdir -p /home/ubuntu/sonar-data/extensions
  - sudo mkdir -p /home/ubuntu/sonar-data/logs

  - echo "Setting permissions for Docker volumes..."
  - sudo chown -R azureuser:azureuser /home/ubuntu/postgres
  - sudo chown -R azureuser:azureuser /home/ubuntu/sonar-data

  - echo "Make Directory for Docker Compose"
  - sudo mkdir -p /etc/docker-compose/sonarqube
  
  - echo "Config Docker"
  - sudo systemctl enable docker
  - sudo systemctl start docker

  # Installing and configuring SonarQube Scanner
  - sudo apt-get update
  - echo "Downloading SonarQube Scanner..."
  - wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
  - echo "Unzipping SonarQube Scanner..."
  - unzip sonar-scanner-cli-4.7.0.2747-linux.zip -d /opt
  - echo "Setting up Sonar Scanner environment variables..."
  - sudo sh -c 'echo "export PATH=\$PATH:/opt/sonar-scanner-4.7.0.2747-linux/bin" >> /etc/profile'
  - source /etc/profile


  - echo "Updating Docker Compose to supported version..."
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose

  # Lowering ElasticSearch VirtualMemory for SonarQube to run on small VMs
  - sudo sysctl -w vm.max_map_count=262144
  - sudo sysctl -p

  # Installing Python 3.11 and Pip
  - sudo add-apt-repository ppa:deadsnakes/ppa
  - sudo apt update
  - sudo apt install python3.11
  - sudo apt install python3.11-distilutils
  - curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11
  - sudo apt install python3-pip -y

  - echo "Docker-Compose up"
  - sudo docker-compose -f /etc/docker-compose/sonarqube/docker-compose.yml up -d
